*,
*::before,
*::after {
	box-sizing: border-box;
	border: 0;
	margin: 0;
	padding: 0;
	outline: 0;
	font-family: sans-serif;
}

img {
	max-width: 100%;
}

a,
b,
i,
button,
code,
img,
input,
label,
span,
strong,
textarea {
	display: inline-block;
	/* ðŸ¤¸ï¸Ž By default a tags are `inline`, making it inline-block allows a tags to have margin-top and margin-bottom. */
}

button:focus {
	outline: none;
	/* ^^ To disable outline when the button is in focus(i.e., after you click the button for once)*/
}

.target {
	user-select: none;
	/* To disable text selection. */
}

/* ************************************* */

.wrapper > div {
	background: #eee;
	padding: 1em;
}

.wrapper > div:nth-child(odd) {
	background: #ddd;
}

.wrapper {
	display: grid;
	/*ðŸ¤½ï¸Ž Fractions (fr) are recommended over percentages and pixels coz you are gonna get conflict with margins and paddings if you use percetage or pixels ~ Brad (traversy media guy) */

	/* grid-template-columns: 1fr 1fr 1fr; */
	/* ðŸ¤ºï¸Ž Below is equivalent to above line though. */
	/* grid-template-columns: repeat(3, 1fr); */

	/* grid-template-columns: 1fr 2fr 1fr 2fr 1fr 2fr 1fr 2fr; */
	/* ðŸ¤ºï¸Ž Below is equivalent to above line though. */
	/* grid-template-columns: repeat(4, 1fr 2fr); */

	grid-template-columns: repeat(3, 1fr);
	grid-gap: 1rem;

	/* ðŸ”½ï¸Ž This sets height of each row to given value. */
	/* grid-auto-rows: 100px; */

	/* ðŸ”½ï¸Ž So minmax ðŸ’“ï¸Ž function simply says if content height takes more than 100px then height will be set to `auto`(means the content will be able stretch the height of the row, yo!), yo!! */
	grid-auto-rows: minmax(100px, auto);
	/* Good thing of above intelligent way is that we also increase the height of the entire row thus thats a pleasing thing to see. */
}

/* ***** */
.nested > div {
	background: #eee;
	padding: 1rem;
	border: 1px solid #fff;
}

.nested {
	display: grid;
	grid-template-columns: repeat(3, 1fr);
	grid-auto-rows: 70px;
	grid-gap: 1rem;
}
